<?php

namespace iseeyoucopy\phpmvc\models;

use iseeyoucopy\phpmvc\Application;
use iseeyoucopy\phpmvc\ProductModel;

class Product extends ProductModel
{

    public int $id = 0;
    public string $name = '';
    public string $description = '';
    public int $price = 0;
    public string $category = '';
    public string $created_at = '';
    public string $updated_at = '';
    public string $added_by = '';
    public ?string $image = '';

    public static function tableName(): string
    {
        return 'products';
    }

    public function attributes(): array
    {
        return [
            'name',
            'description',
            'price',
            'category',
            'created_at',
            'updated_at',
            'added_by',
            'image'
        ];
    }

    public function rules(): array {
        return [
            'name' => [self::RULE_REQUIRED],
            'description' => [self::RULE_REQUIRED],
            'price' => [self::RULE_REQUIRED],
            'category' => [self::RULE_REQUIRED],
        ];
    }

    public function labels(): array {
        return [
            'name' => 'Name',
            'description' => 'Description',
            'price' => 'Price',
            'category' => 'Category',
        ];
    }
    public function update()
    {
        $user = User::findOne(['username' => $this->added_by]);
        $this->updated_at = date('Y-m-d H:i:s');
        // Check if user exists, else use a default username
        $this->added_by = $user->username ?? 'Anonymous';

        return parent::update(); // TODO: Change the autogenerated stub
    }
    public function save()
    {
        $user = User::findOne(['username' => $this->added_by]);
        $this->created_at = date('Y-m-d H:i:s');
        // Check if user exists, else use a default username
        $this->added_by = $user->username ?? 'Anonymous';
        var_dump($user);
        return parent::save(); // TODO: Change the autogenerated stub
    }
    public function productResults(): string
    {
        return $this->name . $this->description . $this->price . $this->category;
    }

    // Your model logic to interact with the database
    // For example, fetching latest products based on created_at
    public function getLatestProducts($limit = 3)
    {
        // Your database query to fetch the latest products ordered by created_at
        // Sample query: SELECT * FROM products ORDER BY created_at DESC LIMIT 3;
        // Execute the query and return the results as an array
    }
}